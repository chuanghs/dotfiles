local is_ok, trouble = pcall(require, "trouble")
if not is_ok then
	return
end

trouble.setup({
	auto_close = false,
	auto_open = false,
	auto_preview = true,
	auto_refresh = true,
	focus = false,
	restore = true,
	follow = true,
	indent_guides = true,
	max_items = 200,
	multiline = true,
	pinned = false,
	keys = {
		["?"] = "help",
		r = "refresh",
		R = "toggle_refresh",
		q = "close",
		o = "jump_close",
		["<esc>"] = "cancel",
		["<cr>"] = "jump",
		["<c-s>"] = "jump_split",
		["<c-v>"] = "jump_vsplit",
		-- j = "next",
		["}"] = "next",
		["]]"] = "next",
		-- k = "prev",
		["{"] = "prev",
		["[["] = "prev",
		i = "inspect",
		p = "preview",
		P = "toggle_preview",
		zo = "fold_open",
		zO = "fold_open_recursive",
		zc = "fold_close",
		zC = "fold_close_recursive",
		za = "fold_toggle",
		zA = "fold_toggle_recursive",
		zm = "fold_more",
		zM = "fold_close_all",
		zr = "fold_reduce",
		zR = "fold_open_all",
		zx = "fold_update",
		zX = "fold_update_all",
		zn = "fold_disable",
		zN = "fold_enable",
		zi = "fold_toggle_enable",
	},
	modes = {
		desc = "document symbols",
		mode = "lsp_document_symbols",
		focus = false,
		win = { position = "right" },
		filter = {
			["not"] = { ft = "lua", kind = "Package" },
			any = {
				ft = { "help", "markdown" },
				-- default set of symbol kinds
				kind = {
					"Class",
					"Constructor",
					"Enum",
					"Field",
					"Function",
					"Interface",
					"Method",
					"Module",
					"Namespace",
					"Package",
					"Property",
					"Struct",
					"Trait",
				},
			},
		},
	},
})
